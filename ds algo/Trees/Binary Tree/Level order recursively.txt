#include <bits/stdc++.h>
using namespace std;

class node
{
  public:
  int data; 
  node* left;
  node* right;

  node(int d)
  {
    data = d;
    left =NULL;
    right = NULL;
  }
};

node* buildTree()
{
  int d;
  cin>>d;

  if(d==-1)
  return NULL;

  node *root = new node(d);
  root->left = buildTree();
  root->right = buildTree();
  return root;
}

int height(node* root)
{
  if(root==NULL)
  return 0;

  int leftSubtreeHeight = height(root->left);
  int rightSubtreeHeight = height(root->right);

  return max(leftSubtreeHeight, rightSubtreeHeight)+1;
}

void printKthLevelNodes(node* root, int k)
{
  if(root==NULL)
  return;

  if(k==1)
  {
    cout<<root->data<<" ";
    return;
  }

  printKthLevelNodes(root->left, k-1);
  printKthLevelNodes(root->right, k-1);
  return;
}

void printLevelOrder(node *root)
{
  int h = height(root);
  for(int i=1 ; i<=h; i++)
  {
    printKthLevelNodes(root, i);
    cout<<endl;
  }
  
}

int main()
{
  node *root = buildTree();
  printLevelOrder(root);
  return 0;
}

