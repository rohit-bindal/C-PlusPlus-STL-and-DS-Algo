#include <bits/stdc++.h>
using namespace std;

class node
{
  public:
  int data;
  node* left;
  node* right;

  node(int d)
  {
    data =d;
    left = NULL;
    right = NULL;
  }
};

node* buildTree()
{
  int d;
  cin>>d;

  if(d==-1)
  return NULL;

  node *root = new node(d);
  root->left = buildTree();
  root->right = buildTree();
  return root;
}

int sumReplacement(node* root)
{
  if(root==NULL)
  return 0;
   
  //if nodes are leaf nodes
  if(root->left==NULL && root->right==NULL)
  {
    return root->data;
  }

  int ls = sumReplacement(root->left);
  int rs = sumReplacement(root->right);
  int temp = root->data;
  root->data = ls+rs;

  return temp + root->data;
}

void print(node* root)
{
  if(root==NULL)
  return;

  cout<<root->data<<" ";
  print(root->left);
  print(root->right);
}

int main()
{
  node * root = buildTree();
  cout<<"Original Tree: ";
  print(root);
  cout<<endl<<"Replaced Tree: ";
  int a = sumReplacement(root);
  print(root);
  return 0;
}

