#include <bits/stdc++.h>
using namespace std;

class node
{
  public:
  int data; 
  node* left;
  node* right;

  node(int d)
  {
    data = d;
    left =NULL;
    right = NULL;
  }
};

node* buildTree()
{
  int d;
  cin>>d;

  if(d==-1)
  return NULL;

  node *root = new node(d);
  root->left = buildTree();
  root->right = buildTree();
  return root;
}

//prints level order nodes in proper format
void modifiedBfs(node* root)
{
  queue<node*> q;
  q.push(root);
  q.push(NULL);

  while(!q.empty())
  {
    node* f = q.front();
    
    if(f==NULL)
    {
      cout<<endl;
      q.pop();
      if(!q.empty())
      {
        q.push(NULL);
      }
    }
    else{
      q.pop();
    cout<<f->data<<" ";

    if(f->left) //root->left!=NULL
    q.push(f->left);

    if(f->right)
    q.push(f->right);
  }
  }
  return;
}

int main()
{
  node *root = buildTree();
  modifiedBfs(root);
  return 0;
}

