#include <bits/stdc++.h>
using namespace std;

class node
{
  public:
  int data;
  node* left;
  node* right;

  node(int d)
  {
    data= d;
    left = NULL;
    right = NULL;
  }
};

node* buildTree()
{
  int d;
  cin>>d;

  if(d==-1)
  return NULL;

  node* root = new node(d);
  root->left=buildTree();
  root->right = buildTree();
  return root;
}

int height(node* root)
{
  if(root==NULL)
  return 0;

  int lh= height(root->left);
  int rh = height(root->right);
  return max(lh,rh) + 1;
}

//diameter of the tree is longest distance between two nodes

int diameter(node* root)
{
  if(root==NULL)
  return 0;

  int h1 = height(root->left);
  int h2 = height(root->right);

  int op1 = h1+h2; //when diameter passes throught the root
  int op2 = diameter(root->left); //when diameter entirely lies in left subtree
  int op3 = diameter(root->right); //when diameter entirely lies in right subtree
  return max(op1, max(op2, op3));
}

int main()
{
  node* root = buildTree();
  cout<<"Diameter of the Tree: "<<diameter(root);
  return 0;
}

