#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define int long long

class Graph
{
  map<int, list<int>> l;

  public:

  void addEdge(int x, int y)
  {
    l[x].push_back(y);
    l[y].push_back(x);
  }

  void dfs_helper(int src, map<int, bool> &visited)
  {
    cout<<src<<" ";
    visited[src]= true;

    for(auto nbrs: l[src])
    {
        if(!visited[nbrs])
        {
            dfs_helper(nbrs, visited);
        }
    }
  }
   
  void dfs(int src)
  {
      map<int, bool> visited;
      for(auto p: l)
      {
          int node = p.first;
          visited[node] = false;
      }
    //we will do recursion in our dfs_helper because we want to execute the above for loop only once
      dfs_helper(src, visited);
  }

};

int32_t main()
{
  IOS;
  Graph g;
  g.addEdge(1,2);
  g.addEdge(1,0);
  g.addEdge(2,3);
  g.addEdge(3,0);
  g.addEdge(3,4);
  g.addEdge(4,5);
  g.dfs(0);
  return 0;
}

